---

- name: Add the Bitnami Helm repo (for Redis Commander)
  become_user: "{{ kube_admin_user }}"
  kubernetes.core.helm_repository:
    name: bitnami
    repo_url: https://charts.bitnami.com/bitnami
    state: present

- name: Add the Kfirfer Helm repo (for Redis Commander)
  become_user: "{{ kube_admin_user }}"
  kubernetes.core.helm_repository:
    name: kfirfer
    repo_url: https://kfirfer.github.io/charts/
    state: present

- name: Install Redis Helm chart
  become_user: "{{ kube_admin_user }}"
  kubernetes.core.helm:
    chart_ref: bitnami/redis
    release_name: redis
    namespace: redis
    create_namespace: true
    update_repo_cache: true
    values: 
      architecture: standalone
      global:
        redis:
          password: "{{ redis_password }}"
      master:
#        containerSecurityContext:
#          enabled: false
#          runAsUser: 0
#          runAsGroup: 0
#          runAsNonRoot: false
#        podSecurityContext:
#          enabled: false
        persistence:
          enabled: true
#          storageClass: openebs-zfspv
#          storageClass: openebs-single-replica
          storageClass: openebs-triple-replica
          accessMode: ReadWriteOnce
          size: 10Gi
#      useExternalDNS:
#        enabled: true
#        suffix: infiquetra.com
      service:
        type: LoadBalancer
        annotations:
          metallb.universe.tf/address-pool: default-addresspool

- name: Install Redis Commander
  become_user: "{{ kube_admin_user }}"
  kubernetes.core.helm:
    chart_ref: kfirfer/redis-commander
    release_name: redis-commander
    namespace: redis
    create_namespace: true
    values: 
      redis:
        host: redis
        port: 6379
        password: "{{ redis_password }}"
      service:
        type: LoadBalancer
        annotations:
          metallb.universe.tf/address-pool: default # Specify your MetalLB address pool here

- name: Wait for Redis Commander LoadBalancer IP
  become_user: "{{ kube_admin_user }}"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Service
    namespace: redis
    name: redis-commander
  register: redis_commander_service

- name: Display Redis Commander URL
  debug:
    msg: "Redis Commander is accessible at http://{{ redis_commander_service.resources[0].status.loadBalancer.ingress[0].ip }}"
