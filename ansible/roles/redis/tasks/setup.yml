---

- name: Add the Bitnami Helm repo (for Redis Commander)
  become_user: "{{ kube_admin_user }}"
  kubernetes.core.helm_repository:
    name: bitnami
    repo_url: https://charts.bitnami.com/bitnami
    state: present

- name: Add the Kfirfer Helm repo (for Redis Commander)
  become_user: "{{ kube_admin_user }}"
  kubernetes.core.helm_repository:
    name: kfirfer
    repo_url: https://kfirfer.github.io/charts/
    state: present

- name: Add the redisinsights Helm repo (for Redis Commander)
  become_user: "{{ kube_admin_user }}"
  kubernetes.core.helm_repository:
    name: redisinsight-gui
    repo_url: https://mrnim94.github.io/redisinsight/
    state: present

- name: Deploy Redis Cluster
  become_user: "{{ kube_admin_user }}"
  kubernetes.core.helm:
    chart_ref: bitnami/redis-cluster
    release_name: redis
    namespace: redis
    create_namespace: true
    update_repo_cache: true
    values: 
      global:
        redis:
          password: "{{ redis_password }}"
      persistence:
        enabled: true
        storageClass: openebs-single-replica
        accessMode: ReadWriteOnce
        size: 10Gi
      cluster:
        nodes: 12 
        replicas: 3
      service:
        type: LoadBalancer

- name: Deploy RedisInsight
  become_user: "{{ kube_admin_user }}"
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'redisinsight-deployment.yaml.j2') }}"

- name: Verify RedisInsight Service
  become_user: "{{ kube_admin_user }}"
  kubernetes.core.k8s_info:
    kind: Service
    namespace: redis
    name: redisinsight
  retries: 10
  delay: 30
  until: redisinsight_service.resources[0].status.loadBalancer.ingress is defined
  register: redisinsight_service

- name: Deploy Redis Commander
  become_user: "{{ kube_admin_user }}"
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'redis-commander-deployment.yaml.j2') }}"

- name: Verify Redis Commander Service
  become_user: "{{ kube_admin_user }}"
  kubernetes.core.k8s_info:
    kind: Service
    namespace: "{{ redis_namespace }}"
    name: redis-commander
  retries: 10
  delay: 30
  until: redis_commander_service.resources[0].status.loadBalancer.ingress is defined
  register: redis_commander_service
